name: cicd

on:
    push:
        branches:
            - production
            - new-ui

jobs:
    build-frontend:
        name: Build Fronend
        runs-on: ubuntu-latest
        steps:
          - name: checkout code
            uses: actions/checkout@v2
        
          - name: Setup Node.js
            uses: actions/setup-node@v2
            with:
              node-version: "20.x"
            
          - name: Install Dependecies
            run: |
                npm install

          - name: Build App
            run: |
                npm run build

          - name: Archive Artifacts
            uses: actions/upload-artifact@v2
            with:
                name: download frontend artifact
                path: ./.next
          
          - name: Verify
            run: |
                 ls -al 

    
    test-frontend:
        name: Testing frontend
        needs: build-frontend
        runs-on: ubuntu-latest
        steps:
            - name: Download artifacts from the build job
              uses: actions/download-artifact@v2
              with:
                name: download frontend artifact
                path: .next

            - name: Run the Test
              run: |
                # running test
                # to do it later

    
    deploy-staging:
        name: Deploy Production
        needs: [build-frontend, test-frontend]
        if: github.event_name == 'push' && (github.ref == 'refs/heads/new-ui')
        runs-on: ubuntu-latest

        steps:
            - name: Download artifacts from the build job
              uses: actions/download-artifact@v2
              with:
                name: download frontend artifact
                path: ./.next
        
            - name: executing remote ssh commands using password
              uses: appleboy/ssh-action@v1.0.1
              with:
                  host: ${{ secrets.FTP_SERVER}}
                  username: ${{ secrets.FTP_USER }}
                  password: ${{ secrets.FTP_PASSWORD }}
                  port: ${{ secrets.FTP_PORT }}
                  script: |
                    cd ${{secrets.path}}
                    ./deploy.sh
            



    
        
            